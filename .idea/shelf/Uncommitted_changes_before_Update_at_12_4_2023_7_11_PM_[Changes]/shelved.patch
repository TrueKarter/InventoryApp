Index: src/screens/GenerateReportScreen/styles.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { StyleSheet } from 'react-native'; // Import the StyleSheet module from 'react-native'\r\n\r\n/* Create and export the styles object using StyleSheet.create */\r\nconst styles = StyleSheet.create({\r\n  /* Styling for the main container */\r\n  container: {\r\n    backgroundColor: '#fff',\r\n  },\r\n\r\n  /* Styling for the container with flex properties */\r\n  flexContainer: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '50%',\r\n  },\r\n\r\n  /* Styling for the header section */\r\n  header: {\r\n    backgroundColor: '#ff0000',\r\n    paddingTop: 35,\r\n    paddingBottom: 35,\r\n  },\r\n\r\n  /* Styling for the header text */\r\n  headerText: {\r\n    textAlign: 'center',\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n  },\r\n\r\n  /* Styling for the back button */\r\n  backButton: {\r\n    position: 'absolute',\r\n    top: 26,\r\n    left: 15,\r\n    width: 70,\r\n    height: 70,\r\n  },\r\n\r\n  /* Styling for the flex container with different marginTop */\r\n  flexContainer: {\r\n    marginTop: '10%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  /* Styling for the input fields */\r\n  input: {\r\n    width: '40%',\r\n    backgroundColor: 'rgba(12,12,12,0.1)',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    fontSize: 20,\r\n    marginBottom: 20,\r\n  },\r\n\r\n  /* Styling for the button */\r\n  button: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#a1c181',\r\n    borderRadius: 8,\r\n    height: 50,\r\n    padding: 15,\r\n    width: '80%',\r\n    marginTop: 50,\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  /* Styling for the button text */\r\n  buttonText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default styles; // Export the styles object\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/screens/GenerateReportScreen/styles.js b/src/screens/GenerateReportScreen/styles.js
--- a/src/screens/GenerateReportScreen/styles.js	(revision b4edcf43bbd79a2805f411cc65e9c28c0a1f8ef4)
+++ b/src/screens/GenerateReportScreen/styles.js	(date 1701733987257)
@@ -13,7 +13,15 @@
     justifyContent: 'center',
     marginTop: '50%',
   },
-
+/*scroll container*/
+    Scroll:{
+      flex:1,
+      borderWidth: 1,
+      borderColor: 'black',
+      backgroundColor: 'white',
+      flexDirection: 'row',
+      flexWrap :'wrap',
+    },
   /* Styling for the header section */
   header: {
     backgroundColor: '#ff0000',
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"54a95f58-be3b-493a-953a-31d9e53bc8ff\" name=\"Changes\" comment=\"Removed aisle field in Data Entry screen.&#10;Reordered the data entry to zone, shelf, upc, quantity.&#10;Made it so that upon entering the &quot;Data Entry&quot;screen it immediatly moves the cursur to Zone.&#10;Everytime a user enters data into a field it moves to the next field.&#10;Once a quantity is entered it automatically adds the item to database then loops back to upc for more product staying in the zone and shelf.&#10;This also works when the camera is on.&#10;two buttons are added to leave a zone and leave a shelf.&#10;&#10;I need to figure out how to make it so that you must do things in order and cannot skip around.&#10;I have only worked on the DataEntry screen\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/screens/DataEntryScreen/DataEntryScreen.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/screens/DataEntryScreen/DataEntryScreen.js\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/screens/GenerateReportScreen/GenerateReportScreen.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/screens/GenerateReportScreen/GenerateReportScreen.js\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2XrshdAkxmxOkJ7V3pgWiLLdXz0\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;AnalyzeApkAction.lastApkPath&quot;: &quot;C:/Users/edwar/Documents/GitHub/InventoryApp&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;com.google.services.firebase.aqiPopupShown&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/edwar/Documents/GitHub/InventoryApp&quot;,\r\n    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;advanced.settings&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"$USER_HOME$/AppData/Local/Android/Sdk\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <module name=\"InventoryApp\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Java Scratch\">\r\n      <shortenClasspath name=\"NONE\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"54a95f58-be3b-493a-953a-31d9e53bc8ff\" name=\"Changes\" comment=\"\" />\r\n      <created>1699398654967</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1699398654967</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Removed aisle field in Data Entry screen.&#10;Reordered the data entry to zone, shelf, upc, quantity.&#10;Made it so that upon entering the &quot;Data Entry&quot;screen it immediatly moves the cursur to Zone.&#10;Everytime a user enters data into a field it moves to the next field.&#10;Once a quantity is entered it automatically adds the item to database then loops back to upc for more product staying in the zone and shelf.&#10;This also works when the camera is on.&#10;two buttons are added to leave a zone and leave a shelf.&#10;&#10;I need to figure out how to make it so that you must do things in order and cannot skip around.&#10;I have only worked on the DataEntry screen\">\r\n      <created>1701286602257</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701286602257</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.History.Properties\">\r\n    <option name=\"COLUMN_ID_ORDER\">\r\n      <list>\r\n        <option value=\"Default.Root\" />\r\n        <option value=\"Default.Author\" />\r\n        <option value=\"Default.Date\" />\r\n        <option value=\"Default.Subject\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Removed aisle field in Data Entry screen.&#10;Reordered the data entry to zone, shelf, upc, quantity.&#10;Made it so that upon entering the &quot;Data Entry&quot;screen it immediatly moves the cursur to Zone.&#10;Everytime a user enters data into a field it moves to the next field.&#10;Once a quantity is entered it automatically adds the item to database then loops back to upc for more product staying in the zone and shelf.&#10;This also works when the camera is on.&#10;two buttons are added to leave a zone and leave a shelf.&#10;&#10;I need to figure out how to make it so that you must do things in order and cannot skip around.&#10;I have only worked on the DataEntry screen\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Removed aisle field in Data Entry screen.&#10;Reordered the data entry to zone, shelf, upc, quantity.&#10;Made it so that upon entering the &quot;Data Entry&quot;screen it immediatly moves the cursur to Zone.&#10;Everytime a user enters data into a field it moves to the next field.&#10;Once a quantity is entered it automatically adds the item to database then loops back to upc for more product staying in the zone and shelf.&#10;This also works when the camera is on.&#10;two buttons are added to leave a zone and leave a shelf.&#10;&#10;I need to figure out how to make it so that you must do things in order and cannot skip around.&#10;I have only worked on the DataEntry screen\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b4edcf43bbd79a2805f411cc65e9c28c0a1f8ef4)
+++ b/.idea/workspace.xml	(date 1701738677138)
@@ -5,8 +5,9 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="54a95f58-be3b-493a-953a-31d9e53bc8ff" name="Changes" comment="Removed aisle field in Data Entry screen.&#10;Reordered the data entry to zone, shelf, upc, quantity.&#10;Made it so that upon entering the &quot;Data Entry&quot;screen it immediatly moves the cursur to Zone.&#10;Everytime a user enters data into a field it moves to the next field.&#10;Once a quantity is entered it automatically adds the item to database then loops back to upc for more product staying in the zone and shelf.&#10;This also works when the camera is on.&#10;two buttons are added to leave a zone and leave a shelf.&#10;&#10;I need to figure out how to make it so that you must do things in order and cannot skip around.&#10;I have only worked on the DataEntry screen">
-      <change beforePath="$PROJECT_DIR$/src/screens/DataEntryScreen/DataEntryScreen.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/screens/DataEntryScreen/DataEntryScreen.js" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/screens/GenerateReportScreen/GenerateReportScreen.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/screens/GenerateReportScreen/GenerateReportScreen.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/navigation/AppNavigator.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/navigation/AppNavigator.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/screens/GenerateReportScreen/styles.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/screens/GenerateReportScreen/styles.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
Index: src/navigation/AppNavigator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'; // Import React to enable the use of JSX syntax\r\n\r\n/* Import Navigation Container and createNativeStackNavigator from React Navigation */\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\n/* Import the screens used in the navigation */\r\nimport LoginScreen from '../screens/LoginScreen/LoginScreen';\r\nimport RegistrationScreen from '../screens/RegistrationScreen/RegistrationScreen';\r\nimport HomeScreen from '../screens/HomeScreen/HomeScreen';\r\nimport DataEntryScreen from '../screens/DataEntryScreen/DataEntryScreen';\r\nimport RemovalScreen from '../screens/RemovalScreen/RemovalScreen';\r\nimport AccountScreen from '../screens/AccountScreen/AccountScreen';\r\nimport GenerateReportScreen from '../screens/GenerateReportScreen/GenerateReportScreen';\r\n\r\nconst Stack = createNativeStackNavigator(); // Create a stack navigator using createNativeStackNavigator\r\n\r\n/* Define the main AppNavigator component as a functional component */\r\nexport default function AppNavigator() {\r\n  return (\r\n    /* Use NavigationContainer to wrap the entire navigation structure */\r\n    <NavigationContainer>\r\n      {/* Create a stack navigator with initial route name set to \"Login\" */}\r\n      <Stack.Navigator initialRouteName=\"Login\">\r\n        {/* Define each screen in the stack with its name, component, and optional header options */}\r\n        <Stack.Screen\r\n          name=\"Login\"\r\n          component={LoginScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Registration\"\r\n          component={RegistrationScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Home\"\r\n          component={HomeScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"DataEntry\"\r\n          component={DataEntryScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Removal\"\r\n          component={RemovalScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Account\"\r\n          component={AccountScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"GenerateReport\"\r\n          component={GenerateReportScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/navigation/AppNavigator.js b/src/navigation/AppNavigator.js
--- a/src/navigation/AppNavigator.js	(revision b4edcf43bbd79a2805f411cc65e9c28c0a1f8ef4)
+++ b/src/navigation/AppNavigator.js	(date 1701726633739)
@@ -21,7 +21,7 @@
     /* Use NavigationContainer to wrap the entire navigation structure */
     <NavigationContainer>
       {/* Create a stack navigator with initial route name set to "Login" */}
-      <Stack.Navigator initialRouteName="Login">
+      <Stack.Navigator initialRouteName="Home">
         {/* Define each screen in the stack with its name, component, and optional header options */}
         <Stack.Screen
           name="Login"
